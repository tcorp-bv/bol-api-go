// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Cancellation cancellation
//
// swagger:model Cancellation
type Cancellation struct {

	// The code representing the reason for cancellation of this item.
	// Enum: [OUT_OF_STOCK REQUESTED_BY_CUSTOMER BAD_CONDITION HIGHER_SHIPCOST INCORRECT_PRICE NOT_AVAIL_IN_TIME NO_BOL_GUARANTEE ORDERED_TWICE RETAIN_ITEM TECH_ISSUE UNFINDABLE_ITEM OTHER]
	ReasonCode string `json:"reasonCode,omitempty"`
}

// Validate validates this cancellation
func (m *Cancellation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateReasonCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var cancellationTypeReasonCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OUT_OF_STOCK","REQUESTED_BY_CUSTOMER","BAD_CONDITION","HIGHER_SHIPCOST","INCORRECT_PRICE","NOT_AVAIL_IN_TIME","NO_BOL_GUARANTEE","ORDERED_TWICE","RETAIN_ITEM","TECH_ISSUE","UNFINDABLE_ITEM","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cancellationTypeReasonCodePropEnum = append(cancellationTypeReasonCodePropEnum, v)
	}
}

const (

	// CancellationReasonCodeOUTOFSTOCK captures enum value "OUT_OF_STOCK"
	CancellationReasonCodeOUTOFSTOCK string = "OUT_OF_STOCK"

	// CancellationReasonCodeREQUESTEDBYCUSTOMER captures enum value "REQUESTED_BY_CUSTOMER"
	CancellationReasonCodeREQUESTEDBYCUSTOMER string = "REQUESTED_BY_CUSTOMER"

	// CancellationReasonCodeBADCONDITION captures enum value "BAD_CONDITION"
	CancellationReasonCodeBADCONDITION string = "BAD_CONDITION"

	// CancellationReasonCodeHIGHERSHIPCOST captures enum value "HIGHER_SHIPCOST"
	CancellationReasonCodeHIGHERSHIPCOST string = "HIGHER_SHIPCOST"

	// CancellationReasonCodeINCORRECTPRICE captures enum value "INCORRECT_PRICE"
	CancellationReasonCodeINCORRECTPRICE string = "INCORRECT_PRICE"

	// CancellationReasonCodeNOTAVAILINTIME captures enum value "NOT_AVAIL_IN_TIME"
	CancellationReasonCodeNOTAVAILINTIME string = "NOT_AVAIL_IN_TIME"

	// CancellationReasonCodeNOBOLGUARANTEE captures enum value "NO_BOL_GUARANTEE"
	CancellationReasonCodeNOBOLGUARANTEE string = "NO_BOL_GUARANTEE"

	// CancellationReasonCodeORDEREDTWICE captures enum value "ORDERED_TWICE"
	CancellationReasonCodeORDEREDTWICE string = "ORDERED_TWICE"

	// CancellationReasonCodeRETAINITEM captures enum value "RETAIN_ITEM"
	CancellationReasonCodeRETAINITEM string = "RETAIN_ITEM"

	// CancellationReasonCodeTECHISSUE captures enum value "TECH_ISSUE"
	CancellationReasonCodeTECHISSUE string = "TECH_ISSUE"

	// CancellationReasonCodeUNFINDABLEITEM captures enum value "UNFINDABLE_ITEM"
	CancellationReasonCodeUNFINDABLEITEM string = "UNFINDABLE_ITEM"

	// CancellationReasonCodeOTHER captures enum value "OTHER"
	CancellationReasonCodeOTHER string = "OTHER"
)

// prop value enum
func (m *Cancellation) validateReasonCodeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, cancellationTypeReasonCodePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Cancellation) validateReasonCode(formats strfmt.Registry) error {

	if swag.IsZero(m.ReasonCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateReasonCodeEnum("reasonCode", "body", m.ReasonCode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Cancellation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Cancellation) UnmarshalBinary(b []byte) error {
	var res Cancellation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
