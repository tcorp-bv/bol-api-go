// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReturnRequest return request
//
// swagger:model ReturnRequest
type ReturnRequest struct {

	// handling result
	// Enum: [RETURN_RECEIVED EXCHANGE_PRODUCT RETURN_DOES_NOT_MEET_CONDITIONS REPAIR_PRODUCT CUSTOMER_KEEPS_PRODUCT_PAID STILL_APPROVED]
	HandlingResult string `json:"handlingResult,omitempty"`

	// quantity returned
	// Required: true
	// Maximum: 9999
	// Minimum: 1
	QuantityReturned *int32 `json:"quantityReturned"`
}

// Validate validates this return request
func (m *ReturnRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHandlingResult(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQuantityReturned(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var returnRequestTypeHandlingResultPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RETURN_RECEIVED","EXCHANGE_PRODUCT","RETURN_DOES_NOT_MEET_CONDITIONS","REPAIR_PRODUCT","CUSTOMER_KEEPS_PRODUCT_PAID","STILL_APPROVED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		returnRequestTypeHandlingResultPropEnum = append(returnRequestTypeHandlingResultPropEnum, v)
	}
}

const (

	// ReturnRequestHandlingResultRETURNRECEIVED captures enum value "RETURN_RECEIVED"
	ReturnRequestHandlingResultRETURNRECEIVED string = "RETURN_RECEIVED"

	// ReturnRequestHandlingResultEXCHANGEPRODUCT captures enum value "EXCHANGE_PRODUCT"
	ReturnRequestHandlingResultEXCHANGEPRODUCT string = "EXCHANGE_PRODUCT"

	// ReturnRequestHandlingResultRETURNDOESNOTMEETCONDITIONS captures enum value "RETURN_DOES_NOT_MEET_CONDITIONS"
	ReturnRequestHandlingResultRETURNDOESNOTMEETCONDITIONS string = "RETURN_DOES_NOT_MEET_CONDITIONS"

	// ReturnRequestHandlingResultREPAIRPRODUCT captures enum value "REPAIR_PRODUCT"
	ReturnRequestHandlingResultREPAIRPRODUCT string = "REPAIR_PRODUCT"

	// ReturnRequestHandlingResultCUSTOMERKEEPSPRODUCTPAID captures enum value "CUSTOMER_KEEPS_PRODUCT_PAID"
	ReturnRequestHandlingResultCUSTOMERKEEPSPRODUCTPAID string = "CUSTOMER_KEEPS_PRODUCT_PAID"

	// ReturnRequestHandlingResultSTILLAPPROVED captures enum value "STILL_APPROVED"
	ReturnRequestHandlingResultSTILLAPPROVED string = "STILL_APPROVED"
)

// prop value enum
func (m *ReturnRequest) validateHandlingResultEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, returnRequestTypeHandlingResultPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ReturnRequest) validateHandlingResult(formats strfmt.Registry) error {

	if swag.IsZero(m.HandlingResult) { // not required
		return nil
	}

	// value enum
	if err := m.validateHandlingResultEnum("handlingResult", "body", m.HandlingResult); err != nil {
		return err
	}

	return nil
}

func (m *ReturnRequest) validateQuantityReturned(formats strfmt.Registry) error {

	if err := validate.Required("quantityReturned", "body", m.QuantityReturned); err != nil {
		return err
	}

	if err := validate.MinimumInt("quantityReturned", "body", int64(*m.QuantityReturned), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("quantityReturned", "body", int64(*m.QuantityReturned), 9999, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReturnRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReturnRequest) UnmarshalBinary(b []byte) error {
	var res ReturnRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
