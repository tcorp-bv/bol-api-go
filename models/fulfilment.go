// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Fulfilment fulfilment
//
// swagger:model Fulfilment
type Fulfilment struct {

	// The delivery promise that applies to this offer.
	// Enum: [24uurs-23 24uurs-22 24uurs-21 24uurs-20 24uurs-19 24uurs-18 24uurs-17 24uurs-16 24uurs-15 24uurs-14 24uurs-13 24uurs-12 1-2d 2-3d 3-5d 4-8d 1-8d MijnLeverbelofte]
	DeliveryCode string `json:"deliveryCode,omitempty"`

	// List of Pick Up Points codes enabled for this offer.
	PickUpPoints []*PickUpPoint `json:"pickUpPoints"`

	// Specifies whether this shipment has been fulfilled by the retailer (FBR) or fulfilled by bol.com (FBB). Defaults to FBR.
	// Enum: [FBB FBR]
	Type string `json:"type,omitempty"`
}

// Validate validates this fulfilment
func (m *Fulfilment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeliveryCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePickUpPoints(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var fulfilmentTypeDeliveryCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["24uurs-23","24uurs-22","24uurs-21","24uurs-20","24uurs-19","24uurs-18","24uurs-17","24uurs-16","24uurs-15","24uurs-14","24uurs-13","24uurs-12","1-2d","2-3d","3-5d","4-8d","1-8d","MijnLeverbelofte"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		fulfilmentTypeDeliveryCodePropEnum = append(fulfilmentTypeDeliveryCodePropEnum, v)
	}
}

const (

	// FulfilmentDeliveryCodeNr24uurs23 captures enum value "24uurs-23"
	FulfilmentDeliveryCodeNr24uurs23 string = "24uurs-23"

	// FulfilmentDeliveryCodeNr24uurs22 captures enum value "24uurs-22"
	FulfilmentDeliveryCodeNr24uurs22 string = "24uurs-22"

	// FulfilmentDeliveryCodeNr24uurs21 captures enum value "24uurs-21"
	FulfilmentDeliveryCodeNr24uurs21 string = "24uurs-21"

	// FulfilmentDeliveryCodeNr24uurs20 captures enum value "24uurs-20"
	FulfilmentDeliveryCodeNr24uurs20 string = "24uurs-20"

	// FulfilmentDeliveryCodeNr24uurs19 captures enum value "24uurs-19"
	FulfilmentDeliveryCodeNr24uurs19 string = "24uurs-19"

	// FulfilmentDeliveryCodeNr24uurs18 captures enum value "24uurs-18"
	FulfilmentDeliveryCodeNr24uurs18 string = "24uurs-18"

	// FulfilmentDeliveryCodeNr24uurs17 captures enum value "24uurs-17"
	FulfilmentDeliveryCodeNr24uurs17 string = "24uurs-17"

	// FulfilmentDeliveryCodeNr24uurs16 captures enum value "24uurs-16"
	FulfilmentDeliveryCodeNr24uurs16 string = "24uurs-16"

	// FulfilmentDeliveryCodeNr24uurs15 captures enum value "24uurs-15"
	FulfilmentDeliveryCodeNr24uurs15 string = "24uurs-15"

	// FulfilmentDeliveryCodeNr24uurs14 captures enum value "24uurs-14"
	FulfilmentDeliveryCodeNr24uurs14 string = "24uurs-14"

	// FulfilmentDeliveryCodeNr24uurs13 captures enum value "24uurs-13"
	FulfilmentDeliveryCodeNr24uurs13 string = "24uurs-13"

	// FulfilmentDeliveryCodeNr24uurs12 captures enum value "24uurs-12"
	FulfilmentDeliveryCodeNr24uurs12 string = "24uurs-12"

	// FulfilmentDeliveryCodeNr12d captures enum value "1-2d"
	FulfilmentDeliveryCodeNr12d string = "1-2d"

	// FulfilmentDeliveryCodeNr23d captures enum value "2-3d"
	FulfilmentDeliveryCodeNr23d string = "2-3d"

	// FulfilmentDeliveryCodeNr35d captures enum value "3-5d"
	FulfilmentDeliveryCodeNr35d string = "3-5d"

	// FulfilmentDeliveryCodeNr48d captures enum value "4-8d"
	FulfilmentDeliveryCodeNr48d string = "4-8d"

	// FulfilmentDeliveryCodeNr18d captures enum value "1-8d"
	FulfilmentDeliveryCodeNr18d string = "1-8d"

	// FulfilmentDeliveryCodeMijnLeverbelofte captures enum value "MijnLeverbelofte"
	FulfilmentDeliveryCodeMijnLeverbelofte string = "MijnLeverbelofte"
)

// prop value enum
func (m *Fulfilment) validateDeliveryCodeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, fulfilmentTypeDeliveryCodePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Fulfilment) validateDeliveryCode(formats strfmt.Registry) error {

	if swag.IsZero(m.DeliveryCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateDeliveryCodeEnum("deliveryCode", "body", m.DeliveryCode); err != nil {
		return err
	}

	return nil
}

func (m *Fulfilment) validatePickUpPoints(formats strfmt.Registry) error {

	if swag.IsZero(m.PickUpPoints) { // not required
		return nil
	}

	for i := 0; i < len(m.PickUpPoints); i++ {
		if swag.IsZero(m.PickUpPoints[i]) { // not required
			continue
		}

		if m.PickUpPoints[i] != nil {
			if err := m.PickUpPoints[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("pickUpPoints" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var fulfilmentTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FBB","FBR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		fulfilmentTypeTypePropEnum = append(fulfilmentTypeTypePropEnum, v)
	}
}

const (

	// FulfilmentTypeFBB captures enum value "FBB"
	FulfilmentTypeFBB string = "FBB"

	// FulfilmentTypeFBR captures enum value "FBR"
	FulfilmentTypeFBR string = "FBR"
)

// prop value enum
func (m *Fulfilment) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, fulfilmentTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Fulfilment) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Fulfilment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Fulfilment) UnmarshalBinary(b []byte) error {
	var res Fulfilment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
