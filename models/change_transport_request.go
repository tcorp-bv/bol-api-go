// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ChangeTransportRequest change transport request
//
// swagger:model ChangeTransportRequest
type ChangeTransportRequest struct {

	// The track and trace code that is associated with this transport.
	TrackAndTrace string `json:"trackAndTrace,omitempty"`

	// transporter code
	// Enum: [BRIEFPOST UPS TNT TNT-EXTRA TNT_BRIEF TNT-EXPRESS DYL DPD-NL DPD-BE BPOST_BE BPOST_BRIEF DHLFORYOU GLS FEDEX_NL FEDEX_BE OTHER DHL DHL_DE DHL-GLOBAL-MAIL TSN FIEGE TRANSMISSION PARCEL-NL LOGOIX PACKS COURIER RJP]
	TransporterCode string `json:"transporterCode,omitempty"`
}

// Validate validates this change transport request
func (m *ChangeTransportRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTransporterCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var changeTransportRequestTypeTransporterCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BRIEFPOST","UPS","TNT","TNT-EXTRA","TNT_BRIEF","TNT-EXPRESS","DYL","DPD-NL","DPD-BE","BPOST_BE","BPOST_BRIEF","DHLFORYOU","GLS","FEDEX_NL","FEDEX_BE","OTHER","DHL","DHL_DE","DHL-GLOBAL-MAIL","TSN","FIEGE","TRANSMISSION","PARCEL-NL","LOGOIX","PACKS","COURIER","RJP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		changeTransportRequestTypeTransporterCodePropEnum = append(changeTransportRequestTypeTransporterCodePropEnum, v)
	}
}

const (

	// ChangeTransportRequestTransporterCodeBRIEFPOST captures enum value "BRIEFPOST"
	ChangeTransportRequestTransporterCodeBRIEFPOST string = "BRIEFPOST"

	// ChangeTransportRequestTransporterCodeUPS captures enum value "UPS"
	ChangeTransportRequestTransporterCodeUPS string = "UPS"

	// ChangeTransportRequestTransporterCodeTNT captures enum value "TNT"
	ChangeTransportRequestTransporterCodeTNT string = "TNT"

	// ChangeTransportRequestTransporterCodeTNTEXTRA captures enum value "TNT-EXTRA"
	ChangeTransportRequestTransporterCodeTNTEXTRA string = "TNT-EXTRA"

	// ChangeTransportRequestTransporterCodeTNTBRIEF captures enum value "TNT_BRIEF"
	ChangeTransportRequestTransporterCodeTNTBRIEF string = "TNT_BRIEF"

	// ChangeTransportRequestTransporterCodeTNTEXPRESS captures enum value "TNT-EXPRESS"
	ChangeTransportRequestTransporterCodeTNTEXPRESS string = "TNT-EXPRESS"

	// ChangeTransportRequestTransporterCodeDYL captures enum value "DYL"
	ChangeTransportRequestTransporterCodeDYL string = "DYL"

	// ChangeTransportRequestTransporterCodeDPDNL captures enum value "DPD-NL"
	ChangeTransportRequestTransporterCodeDPDNL string = "DPD-NL"

	// ChangeTransportRequestTransporterCodeDPDBE captures enum value "DPD-BE"
	ChangeTransportRequestTransporterCodeDPDBE string = "DPD-BE"

	// ChangeTransportRequestTransporterCodeBPOSTBE captures enum value "BPOST_BE"
	ChangeTransportRequestTransporterCodeBPOSTBE string = "BPOST_BE"

	// ChangeTransportRequestTransporterCodeBPOSTBRIEF captures enum value "BPOST_BRIEF"
	ChangeTransportRequestTransporterCodeBPOSTBRIEF string = "BPOST_BRIEF"

	// ChangeTransportRequestTransporterCodeDHLFORYOU captures enum value "DHLFORYOU"
	ChangeTransportRequestTransporterCodeDHLFORYOU string = "DHLFORYOU"

	// ChangeTransportRequestTransporterCodeGLS captures enum value "GLS"
	ChangeTransportRequestTransporterCodeGLS string = "GLS"

	// ChangeTransportRequestTransporterCodeFEDEXNL captures enum value "FEDEX_NL"
	ChangeTransportRequestTransporterCodeFEDEXNL string = "FEDEX_NL"

	// ChangeTransportRequestTransporterCodeFEDEXBE captures enum value "FEDEX_BE"
	ChangeTransportRequestTransporterCodeFEDEXBE string = "FEDEX_BE"

	// ChangeTransportRequestTransporterCodeOTHER captures enum value "OTHER"
	ChangeTransportRequestTransporterCodeOTHER string = "OTHER"

	// ChangeTransportRequestTransporterCodeDHL captures enum value "DHL"
	ChangeTransportRequestTransporterCodeDHL string = "DHL"

	// ChangeTransportRequestTransporterCodeDHLDE captures enum value "DHL_DE"
	ChangeTransportRequestTransporterCodeDHLDE string = "DHL_DE"

	// ChangeTransportRequestTransporterCodeDHLGLOBALMAIL captures enum value "DHL-GLOBAL-MAIL"
	ChangeTransportRequestTransporterCodeDHLGLOBALMAIL string = "DHL-GLOBAL-MAIL"

	// ChangeTransportRequestTransporterCodeTSN captures enum value "TSN"
	ChangeTransportRequestTransporterCodeTSN string = "TSN"

	// ChangeTransportRequestTransporterCodeFIEGE captures enum value "FIEGE"
	ChangeTransportRequestTransporterCodeFIEGE string = "FIEGE"

	// ChangeTransportRequestTransporterCodeTRANSMISSION captures enum value "TRANSMISSION"
	ChangeTransportRequestTransporterCodeTRANSMISSION string = "TRANSMISSION"

	// ChangeTransportRequestTransporterCodePARCELNL captures enum value "PARCEL-NL"
	ChangeTransportRequestTransporterCodePARCELNL string = "PARCEL-NL"

	// ChangeTransportRequestTransporterCodeLOGOIX captures enum value "LOGOIX"
	ChangeTransportRequestTransporterCodeLOGOIX string = "LOGOIX"

	// ChangeTransportRequestTransporterCodePACKS captures enum value "PACKS"
	ChangeTransportRequestTransporterCodePACKS string = "PACKS"

	// ChangeTransportRequestTransporterCodeCOURIER captures enum value "COURIER"
	ChangeTransportRequestTransporterCodeCOURIER string = "COURIER"

	// ChangeTransportRequestTransporterCodeRJP captures enum value "RJP"
	ChangeTransportRequestTransporterCodeRJP string = "RJP"
)

// prop value enum
func (m *ChangeTransportRequest) validateTransporterCodeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, changeTransportRequestTypeTransporterCodePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ChangeTransportRequest) validateTransporterCode(formats strfmt.Registry) error {

	if swag.IsZero(m.TransporterCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateTransporterCodeEnum("transporterCode", "body", m.TransporterCode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ChangeTransportRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ChangeTransportRequest) UnmarshalBinary(b []byte) error {
	var res ChangeTransportRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
