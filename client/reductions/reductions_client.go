// Code generated by go-swagger; DO NOT EDIT.

package reductions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new reductions API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for reductions API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetLatestReductionsFilename(params *GetLatestReductionsFilenameParams) (*GetLatestReductionsFilenameOK, error)

	GetReductions(params *GetReductionsParams) (*GetReductionsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetLatestReductionsFilename gets latest reductions filename

  This endpoint below will return a filename of the latest reductions list. The response from this endpoint can be compared to the response header that was given back from the Get Reductions List endpoint
*/
func (a *Client) GetLatestReductionsFilename(params *GetLatestReductionsFilenameParams) (*GetLatestReductionsFilenameOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetLatestReductionsFilenameParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get-latest-reductions-filename",
		Method:             "GET",
		PathPattern:        "/retailer/reductions/latest",
		ProducesMediaTypes: []string{"application/vnd.retailer.v3+csv"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetLatestReductionsFilenameReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetLatestReductionsFilenameOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get-latest-reductions-filename: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetReductions gets reductions list

  This endpoint will return a list EANâ€™s that are eligible for reductions on the commission fee.
*/
func (a *Client) GetReductions(params *GetReductionsParams) (*GetReductionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetReductionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "get-reductions",
		Method:             "GET",
		PathPattern:        "/retailer/reductions",
		ProducesMediaTypes: []string{"application/vnd.retailer.v3+csv"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetReductionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetReductionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for get-reductions: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
