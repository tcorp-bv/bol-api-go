// Code generated by go-swagger; DO NOT EDIT.

package returns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetReturnParams creates a new GetReturnParams object
// with the default values initialized.
func NewGetReturnParams() *GetReturnParams {
	var ()
	return &GetReturnParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetReturnParamsWithTimeout creates a new GetReturnParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetReturnParamsWithTimeout(timeout time.Duration) *GetReturnParams {
	var ()
	return &GetReturnParams{

		timeout: timeout,
	}
}

// NewGetReturnParamsWithContext creates a new GetReturnParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetReturnParamsWithContext(ctx context.Context) *GetReturnParams {
	var ()
	return &GetReturnParams{

		Context: ctx,
	}
}

// NewGetReturnParamsWithHTTPClient creates a new GetReturnParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetReturnParamsWithHTTPClient(client *http.Client) *GetReturnParams {
	var ()
	return &GetReturnParams{
		HTTPClient: client,
	}
}

/*GetReturnParams contains all the parameters to send to the API endpoint
for the get return operation typically these are written to a http.Request
*/
type GetReturnParams struct {

	/*RmaID
	  The RMA (Return Merchandise Authorization) id that identifies this particular return.

	*/
	RmaID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get return params
func (o *GetReturnParams) WithTimeout(timeout time.Duration) *GetReturnParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get return params
func (o *GetReturnParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get return params
func (o *GetReturnParams) WithContext(ctx context.Context) *GetReturnParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get return params
func (o *GetReturnParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get return params
func (o *GetReturnParams) WithHTTPClient(client *http.Client) *GetReturnParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get return params
func (o *GetReturnParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRmaID adds the rmaID to the get return params
func (o *GetReturnParams) WithRmaID(rmaID int64) *GetReturnParams {
	o.SetRmaID(rmaID)
	return o
}

// SetRmaID adds the rmaId to the get return params
func (o *GetReturnParams) SetRmaID(rmaID int64) {
	o.RmaID = rmaID
}

// WriteToRequest writes these params to a swagger request
func (o *GetReturnParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param rma-id
	if err := r.SetPathParam("rma-id", swag.FormatInt64(o.RmaID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
