// Code generated by go-swagger; DO NOT EDIT.

package returns

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tcorp-bv/bol-api-go/models"
)

// GetReturnReader is a Reader for the GetReturn structure.
type GetReturnReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReturnReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReturnOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetReturnNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetReturnOK creates a GetReturnOK with default headers values
func NewGetReturnOK() *GetReturnOK {
	return &GetReturnOK{}
}

/*GetReturnOK handles this case with default header values.

Ok: Successfully processed the request.
*/
type GetReturnOK struct {
	Payload *models.ReturnItem
}

func (o *GetReturnOK) Error() string {
	return fmt.Sprintf("[GET /retailer/returns/{rma-id}][%d] getReturnOK  %+v", 200, o.Payload)
}

func (o *GetReturnOK) GetPayload() *models.ReturnItem {
	return o.Payload
}

func (o *GetReturnOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReturnItem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReturnNotFound creates a GetReturnNotFound with default headers values
func NewGetReturnNotFound() *GetReturnNotFound {
	return &GetReturnNotFound{}
}

/*GetReturnNotFound handles this case with default header values.

Not found: The requested item could not be found.
*/
type GetReturnNotFound struct {
	Payload *models.Problem
}

func (o *GetReturnNotFound) Error() string {
	return fmt.Sprintf("[GET /retailer/returns/{rma-id}][%d] getReturnNotFound  %+v", 404, o.Payload)
}

func (o *GetReturnNotFound) GetPayload() *models.Problem {
	return o.Payload
}

func (o *GetReturnNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
