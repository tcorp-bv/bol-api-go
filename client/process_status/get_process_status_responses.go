// Code generated by go-swagger; DO NOT EDIT.

package process_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tcorp-bv/bol-api-go/models"
)

// GetProcessStatusReader is a Reader for the GetProcessStatus structure.
type GetProcessStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProcessStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProcessStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetProcessStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetProcessStatusOK creates a GetProcessStatusOK with default headers values
func NewGetProcessStatusOK() *GetProcessStatusOK {
	return &GetProcessStatusOK{}
}

/*GetProcessStatusOK handles this case with default header values.

Ok: Successfully processed the request.
*/
type GetProcessStatusOK struct {
	Payload *models.ProcessStatus
}

func (o *GetProcessStatusOK) Error() string {
	return fmt.Sprintf("[GET /retailer/process-status/{process-status-id}][%d] getProcessStatusOK  %+v", 200, o.Payload)
}

func (o *GetProcessStatusOK) GetPayload() *models.ProcessStatus {
	return o.Payload
}

func (o *GetProcessStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProcessStatusNotFound creates a GetProcessStatusNotFound with default headers values
func NewGetProcessStatusNotFound() *GetProcessStatusNotFound {
	return &GetProcessStatusNotFound{}
}

/*GetProcessStatusNotFound handles this case with default header values.

Not found: The requested item could not be found.
*/
type GetProcessStatusNotFound struct {
	Payload *models.Problem
}

func (o *GetProcessStatusNotFound) Error() string {
	return fmt.Sprintf("[GET /retailer/process-status/{process-status-id}][%d] getProcessStatusNotFound  %+v", 404, o.Payload)
}

func (o *GetProcessStatusNotFound) GetPayload() *models.Problem {
	return o.Payload
}

func (o *GetProcessStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
