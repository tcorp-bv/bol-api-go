// Code generated by go-swagger; DO NOT EDIT.

package transports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetShippingLabelParams creates a new GetShippingLabelParams object
// with the default values initialized.
func NewGetShippingLabelParams() *GetShippingLabelParams {
	var ()
	return &GetShippingLabelParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetShippingLabelParamsWithTimeout creates a new GetShippingLabelParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetShippingLabelParamsWithTimeout(timeout time.Duration) *GetShippingLabelParams {
	var ()
	return &GetShippingLabelParams{

		timeout: timeout,
	}
}

// NewGetShippingLabelParamsWithContext creates a new GetShippingLabelParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetShippingLabelParamsWithContext(ctx context.Context) *GetShippingLabelParams {
	var ()
	return &GetShippingLabelParams{

		Context: ctx,
	}
}

// NewGetShippingLabelParamsWithHTTPClient creates a new GetShippingLabelParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetShippingLabelParamsWithHTTPClient(client *http.Client) *GetShippingLabelParams {
	var ()
	return &GetShippingLabelParams{
		HTTPClient: client,
	}
}

/*GetShippingLabelParams contains all the parameters to send to the API endpoint
for the get shipping label operation typically these are written to a http.Request
*/
type GetShippingLabelParams struct {

	/*TransportID
	  The transport id.

	*/
	TransportID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get shipping label params
func (o *GetShippingLabelParams) WithTimeout(timeout time.Duration) *GetShippingLabelParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get shipping label params
func (o *GetShippingLabelParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get shipping label params
func (o *GetShippingLabelParams) WithContext(ctx context.Context) *GetShippingLabelParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get shipping label params
func (o *GetShippingLabelParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get shipping label params
func (o *GetShippingLabelParams) WithHTTPClient(client *http.Client) *GetShippingLabelParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get shipping label params
func (o *GetShippingLabelParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTransportID adds the transportID to the get shipping label params
func (o *GetShippingLabelParams) WithTransportID(transportID int64) *GetShippingLabelParams {
	o.SetTransportID(transportID)
	return o
}

// SetTransportID adds the transportId to the get shipping label params
func (o *GetShippingLabelParams) SetTransportID(transportID int64) {
	o.TransportID = transportID
}

// WriteToRequest writes these params to a swagger request
func (o *GetShippingLabelParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param transport-id
	if err := r.SetPathParam("transport-id", swag.FormatInt64(o.TransportID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
