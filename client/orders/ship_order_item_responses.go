// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tcorp-bv/bol-api-go/models"
)

// ShipOrderItemReader is a Reader for the ShipOrderItem structure.
type ShipOrderItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShipOrderItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewShipOrderItemAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShipOrderItemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewShipOrderItemAccepted creates a ShipOrderItemAccepted with default headers values
func NewShipOrderItemAccepted() *ShipOrderItemAccepted {
	return &ShipOrderItemAccepted{}
}

/*ShipOrderItemAccepted handles this case with default header values.

Accepted: Successfully scheduled the request for processing.
*/
type ShipOrderItemAccepted struct {
	Payload *models.ProcessStatus
}

func (o *ShipOrderItemAccepted) Error() string {
	return fmt.Sprintf("[PUT /retailer/orders/{order-item-id}/shipment][%d] shipOrderItemAccepted  %+v", 202, o.Payload)
}

func (o *ShipOrderItemAccepted) GetPayload() *models.ProcessStatus {
	return o.Payload
}

func (o *ShipOrderItemAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProcessStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShipOrderItemBadRequest creates a ShipOrderItemBadRequest with default headers values
func NewShipOrderItemBadRequest() *ShipOrderItemBadRequest {
	return &ShipOrderItemBadRequest{}
}

/*ShipOrderItemBadRequest handles this case with default header values.

Bad request: The sent request does not meet the API specification. Please check the error message(s) for more information.
*/
type ShipOrderItemBadRequest struct {
	Payload *models.Problem
}

func (o *ShipOrderItemBadRequest) Error() string {
	return fmt.Sprintf("[PUT /retailer/orders/{order-item-id}/shipment][%d] shipOrderItemBadRequest  %+v", 400, o.Payload)
}

func (o *ShipOrderItemBadRequest) GetPayload() *models.Problem {
	return o.Payload
}

func (o *ShipOrderItemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Problem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
